// ONEexport function scanning(e) {    let viewer = window.earth;    let r = new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(90),        Cesium.Math.toRadians(90),        Cesium.Math.toRadians(0));    let position = Cesium.Cartesian3.fromDegrees(Number(e.lon), Number(e.lat), Number(e.height));    viewer.entities.add({        position: position,        orientation: Cesium.Transforms.headingPitchRollQuaternion(position, r),        rectangularSensor: new Cesium.RectangularSensorGraphics({            radius: Number(e.r),            xHalfAngle: Cesium.Math.toRadians(Number(e.xDegree)),            yHalfAngle: Cesium.Math.toRadians(Number(e.yDegree)),            material: new Cesium.Color(1.0, 0.0, 1.0, 0.4),            lineColor: new Cesium.Color(1.0, 1.0, 1.0, 0.5),            showScanPlane: true,            scanPlaneColor: new Cesium.Color(1.0, 0.0, 1.0, 1.0),            scanPlaneMode: "horizontal",            scanPlaneRate: 3,            showThroughEllipsoid: !1        })    })}// TWO// export function scanning(e) {//     let viewer = window.earth;//// //通过3个画布交替切换实现探测纹理动态//     let changenum = 0;//     let curCanvas = 0;//     let canvasList=document.getElementById('app');//     for (let i=0;i<3;i++) {//         let canvas=document.createElement("canvas");//         canvas.id="canvas"+i;//         canvas.height="400";//         canvas.width="400";//         canvas.style="{display:none}";//         canvasList.appendChild(canvas)//     }////     readyCanvas("canvas0", 5);//     readyCanvas("canvas1", 10);//     readyCanvas("canvas2", 15);////     function drawCanvasImage() {//         changenum++;//         let canvas = document.getElementById("canvas" + curCanvas);//         if (changenum >= 20) {//             changenum = 0;//             if (curCanvas === 0)//                 curCanvas = 1;//             else if (curCanvas === 1)//                 curCanvas = 2;//             else//                 curCanvas = 0;//         }//         return canvas;//     }//// //初始位置//     let lon = Number(e.lon);//     let lat = Number(e.lat);//     let planePosition = Cesium.Cartesian3.fromDegrees(lon, lat, 1000.0)//// //改变圆锥体位置，循环画矩形//     function changePosition() {//         // if (lon > lon && lat < lat) {//         //     lat += 0.00001;//         // } else if (lat > lat && lon > lon) {//         //     lon -= 0.00001;//         // } else if (lon <= lon && lat > lat) {//         //     lat -= 0.00001//         // } else {//         //     lon += 0.00001;//         // }////         planePosition = Cesium.Cartesian3.fromDegrees(lon, lat, 3000.0);//         return planePosition//     }////     let halfLen = 1000.0//     let length = 1000.0;////     function changeLength() {//         return 2 * length;//     }//     let r = new Cesium.HeadingPitchRoll(Cesium.Math.toRadians(90),//         Cesium.Math.toRadians(-90),//         Cesium.Math.toRadians(0));//     let position = Cesium.Cartesian3.fromDegrees(Number(e.lon), Number(e.lat), Number(e.height));// //创建圆锥实体//     let cylinder = viewer.entities.add({//         name: 'Red cone',//         position: position,//         orientation: Cesium.Transforms.headingPitchRollQuaternion(position, r),//         cylinder: {//             length: 2000,//             topRadius: 0.0,//             bottomRadius: 1000.0,//             topSurface: true,    //新增参数，控制顶部是否渲染//             bottomSurface: true,    //新增参数，控制底部是否渲染//             material: new Cesium.ImageMaterialProperty({//                 image: new Cesium.CallbackProperty(drawCanvasImage, false),//                 transparent: true//             })//         }//     });//// }// function readyCanvas(convasid, radius) {//     let canvas = document.getElementById(convasid);//     let cwidth = 10;//     let cheight = 400;//     let ctx = canvas.getContext("2d");//     ctx.clearRect(0, 0, cwidth, cheight);//     ctx.fillStyle = 'rgba(255, 255, 255, 0)';//     ctx.fillRect(0, 0, cwidth, cheight);////     for (let ii = 0; radius <= 200; ii++) {//         ctx.lineWidth = 5;//         //开始一个新的绘制路径//         ctx.beginPath();//         //设置弧线的颜色//         let trans = 1.0 - (radius / 255);//         ctx.strokeStyle = "rgba(255, 0, 255, " + trans + ")";//         let circle = {//             x: 200, //圆心的x轴坐标值//             y: 200, //圆心的y轴坐标值//             r: radius //圆的半径//         };//         //以canvas中的坐标点(200,200)为圆心，绘制一个半径为50px的圆形//         ctx.arc(circle.x, circle.y, circle.r, 0, Math.PI * 2, true);//         //按照指定的路径绘制弧线//         ctx.stroke();//         radius += 20;//     }// }