let num=-1;//镜头旋转export function rotate(e,val) {    if (num<0) {        let handler = new Cesium.ScreenSpaceEventHandler(earth.scene.canvas);        handler.setInputAction(function () {            rotate(true,val)            num++;            handler.destroy();//关闭事件句柄            handler = null;        },Cesium.ScreenSpaceEventType.RIGHT_CLICK);    }else {        num=-1    }    let options = {        lng:Number(val.y?val.y:"29.598239"),        lat: Number(val.x?val.x:"106.372501"),        height: Number(val.z?val.z:"15.5"),        heading: 0.0,        pitch: 0.0,        roll: 0.0    };    let position = Cesium.Cartesian3.fromDegrees(options.lng, options.lat, options.height);// 相机看点的角度，如果大于0那么则是从地底往上看，所以要为负值，这里取-30度    let pitch = Cesium.Math.toRadians(-45);// 给定飞行一周所需时间，比如10s, 那么每秒转动度数    let angle = 360 / 30;// 给定相机距离点多少距离飞行，这里取值为5000m    let distance = 10000;    let startTime = Cesium.JulianDate.fromDate(new Date());    let s = 1000;    if (e) {        s = 0    }    let stopTime = Cesium.JulianDate.addSeconds(startTime, s, new Cesium.JulianDate());    earth.clock.startTime = startTime.clone();  // 开始时间    earth.clock.stopTime = stopTime.clone();     // 结速时间    earth.clock.currentTime = startTime.clone(); // 当前时间    earth.clock.clockRange = Cesium.ClockRange.CLAMPED; // 行为方式    earth.clock.clockStep = Cesium.ClockStep.SYSTEM_CLOCK; // 时钟设置为当前系统时间; 忽略所有其他设置。// 相机的当前heading    let initialHeading = earth.camera.heading;    let Exection = function TimeExecution() {        // 当前已经过去的时间，单位s        let delTime = Cesium.JulianDate.secondsDifference(earth.clock.currentTime, earth.clock.startTime);        let heading = Cesium.Math.toRadians(delTime * angle) + initialHeading;        earth.scene.camera.setView({            destination: position, // 点的坐标            orientation: {                heading: heading,                pitch: pitch,            }        });        earth.scene.camera.moveBackward(distance);        if (Cesium.JulianDate.compare(earth.clock.currentTime, earth.clock.stopTime) >= 0) {            earth.clock.onTick.removeEventListener(Exection);        }    };    earth.clock.onTick.addEventListener(Exection);}